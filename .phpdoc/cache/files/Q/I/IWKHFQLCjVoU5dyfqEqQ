1655164354
AwuilbDvXz%3A43145da9391bdf54adca01b5de0ef1a5-695569855918922beea50c7234468521
s:6016:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjY5NTU2OTg1NTkxODkyMmJlZWE1MGM3MjM0NDY4NTIxIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6OToiaW5kZXgucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTY6ImFwaS92MS9pbmRleC5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjM3MzA6Ijw/cGhwCgpyZXF1aXJlX29uY2UgJF9TRVJWRVJbJ0RPQ1VNRU5UX1JPT1QnXS4iL2FwcC9pbml0LnBocCI7Ci8qKgogKiBAdmFyIHN0cmluZyAkZG9jUm9vdAogKiBAdmFyIEF1dGggJGF1dGgKICogQHZhciBEYXRhYmFzZSAkZGIKICovCgovL2dhdGhlciB0aGUgcmVxdWVzdCBtZXRob2QKJGh0dHBNZXRob2QgPSBzdHJ0b2xvd2VyKCRfU0VSVkVSWydSRVFVRVNUX01FVEhPRCddKTsKCi8vY2hlY2sgaWYgYW4gZW5kcG9pbnQgaXMgZ2l2ZW4KaWYgKGlzc2V0KCRfR0VUWydhcGlwYXRoJ10pKQp7CiAgICAkYXBpcGF0aCA9ICRfR0VUWydhcGlwYXRoJ107Cn0KZWxzZQp7CiAgICBoZWFkZXIoIkxvY2F0aW9uOiAvIik7Cn07CgovL2NhcHR1cmUgdGhlIGJvZHkKJGJvZHkgPSBmaWxlX2dldF9jb250ZW50cygncGhwOi8vaW5wdXQnKTsKLy8gVVJMIG5hYXIgdmFyaWFiZWxlbiBvbXpldHRlbiBkb29yIHRlIHNwbGl0c2VuIG9wICcvJwokYXBpVmFycz1leHBsb2RlKCcvJywkYXBpcGF0aCk7Cgp0cnkgewogICAgLy9hbHMgZW5kcG9pbnQgTklFVCBkZSBmYXEgaXMsIG1vZXQgamUgdmFsaWRhdGVuCiAgICBpZihzdHJ0b2xvd2VyKCRhcGlWYXJzWzBdKSA9PSAiZmFxIiAmJiAhaXNzZXQoJF9TRVJWRVJbJ0hUVFBfQVVUSE9SSVpBVElPTiddKSl7CiAgICAgICAgJGp3dCA9ICJub1Rva2VuIjsKICAgIH1lbHNlewogICAgICAgIC8qCiAgICAgICAgICogQkVHSU4gVkFMSURBVElPTiBPRiBKV1QgVE9LRU4KICAgICAgICAgKi8KICAgICAgICAvL2NoZWNrIG9mIGVlbiB0b2tlbiBpcyBtZWVnZXN0dXVyZAogICAgICAgIGlmICghIGlzc2V0KCRfU0VSVkVSWydIVFRQX0FVVEhPUklaQVRJT04nXSkpCiAgICAgICAgICAgIHRocm93IG5ldyBBUElcTm90QXV0aG9yaXplZEV4Y2VwdGlvbignVG9rZW4gbm90IGZvdW5kJyk7CgogICAgICAgIGlmICghIHByZWdfbWF0Y2goJy9CZWFyZXJccyhcUyspLycsICRfU0VSVkVSWydIVFRQX0FVVEhPUklaQVRJT04nXSwgJG1hdGNoZXMpKQogICAgICAgICAgICB0aHJvdyBuZXcgQVBJXE5vdEF1dGhvcml6ZWRFeGNlcHRpb24oJ1Rva2VuIG5vdCBmb3VuZCcpOwoKICAgICAgICAkand0ID0gKCRtYXRjaGVzWzFdKTsKCgogICAgICAgIGlmICghICRqd3QpCiAgICAgICAgLy8gTm8gdG9rZW4gd2FzIGFibGUgdG8gYmUgZXh0cmFjdGVkIGZyb20gdGhlIGF1dGhvcml6YXRpb24gaGVhZGVyCiAgICAgICAgICAgIHRocm93IG5ldyBBUElcTm90QXV0aG9yaXplZEV4Y2VwdGlvbignVG9rZW4gbm90IGZvdW5kJyk7CgogICAgICAgIC8vY29udHJvbGVlciBvZiBoZXQgSldUIHRva2VuIHZhbGlkZSBpcwogICAgICAgIHRyeXsKICAgICAgICAgICAgJGRlY29kZWQgPVxGaXJlYmFzZVxKV1RcSldUOjpkZWNvZGUoJGp3dCwkX0VOVlsnSldUU0VDUkVUJ10sIFsnSFMyNTYnXSk7CiAgICAgICAgICAgIC8vYWxzIGhldCBvdWRlciBpcyBkYW4gMSB1dXIgaXMgaGV0IG5pZXQgdmFsaWR4CiAgICAgICAgICAgIGlmICgkZGVjb2RlZC0+aWF0IDwgKHRpbWUoKS0zNjAwKSkgdGhyb3cgbmV3IEV4Y2VwdGlvbjsKICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gJGUpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEFQSVxOb3RBdXRob3JpemVkRXhjZXB0aW9uKCdUb2tlbiBub3QgdmFsaWQnKTsKICAgICAgICB9CiAgICB9CiAgICAvKgogICAgICogQkVHSU4gVkFMSURBVElPTiBPRiBFTkRQT0lOVCBBTkQgUEFSQU1FVEVSUwogICAgICoKICAgICAqLwoKICAgIC8vY29udHJvbGVlciBvZiBoZXQgZW5kcG9pbnQgYmVzdGFhdAogICAgJGVuZHBvaW50ID0gIkFQSVxcIi51Y2ZpcnN0KCBzdHJ0b2xvd2VyKCAkYXBpVmFyc1swXSApICk7CiAgICBpZiAoICEgY2xhc3NfZXhpc3RzICgkZW5kcG9pbnQpICkgdGhyb3cgbmV3IEFQSVxOb3RGb3VuZEV4Y2VwdGlvbigiRW5kcG9pbnQgZG9lcyBub3QgZXhpc3RzIik7CgogICAgLy9jb250cm9sZWVyIG9mIGRlIGJvZHkgdmFsaWRlIGpzb24gaXMKICAgIGlmICggKCBqc29uX2RlY29kZSgkYm9keSx0cnVlKSA9PT0gTlVMTCkgQU5EIChzdHJsZW4oJGJvZHkpID4gMCkpIHsKICAgICAgICB0aHJvdyBuZXcgQVBJXEJhZFJlcXVlc3RFeGNlcHRpb24oIkJvZHkgaXMgbm90IGpzb24tZm9ybWF0dGVkIGNvcnJlY3RseSIpOwogICAgfSBlbHNlaWYgKHN0cmxlbigkYm9keSA9PSBmYWxzZSkpIHsKICAgICAgICAkYm9keSA9IFtdOwogICAgfSBlbHNlICRib2R5ID0ganNvbl9kZWNvZGUoJGJvZHksdHJ1ZSk7CgogICAgLy9jcmVhdGUgb2JqZWN0cyBmb3IgcmVzb2x2aW5nCiAgICAkYXBpID0gbmV3IEFQSVxBUEkoJGp3dCk7CiAgICAvL3ZhbGlkYXRlIGFsbCBwYXJhbWV0ZXJzCiAgICB1bnNldCggJF9HRVQgWyAnYXBpcGF0aCcgXSApIDsKCiAgICAkZW5kcG9pbnQ6OnZhbGlkYXRlR2V0KCRfR0VUKTsKCgogICAgLy9JTVBPUlRBTlQKICAgIC8vVE9ETyBHRVQgSVRFTUlEIEJBQ0sKCgogICAgLy9jb252ZXJ0IGFsbCBnZXQgdmFycyB0byBsb3dlcmNhc2UKICAgICRwYXJhbXMgPSBbXTsKICAgIGZvcmVhY2goJF9HRVQgYXMgJGtleSA9PiAkdmFsdWUpCiAgICB7CiAgICAgICAgJGtleSA9IHN0cnRvbG93ZXIoJGtleSk7CiAgICAgICAgJHBhcmFtc1ska2V5XSA9ICgkdmFsdWUpOwogICAgfQoKICAgICRlbmRwb2ludFBhcmFtcyA9ICRlbmRwb2ludDo6dmFsaWRhdGVFbmRwb2ludCgkYXBpVmFycyk7CiAgICBpZihpc3NldCgkZW5kcG9pbnRQYXJhbXMpID4gMCkgewogICAgICAgIGZvcmVhY2ggKCRlbmRwb2ludFBhcmFtcyBhcyAka2V5ID0+ICR2YWx1ZSkgewogICAgICAgICAgICAkcGFyYW1zWyRrZXldID0gJHZhbHVlOwogICAgICAgIH0KICAgIH0KICAgIC8qCiAgICAgKiBFeGVjdXRlIHRoZSByZXF1ZXN0CiAgICAgKi8KCiAgICAkcmVzdWx0ID0gJGFwaS0+ZW5kcG9pbnQoJGVuZHBvaW50KS0+cmVxdWVzdCgkaHR0cE1ldGhvZCktPmJvZHkoJGJvZHkpLT5wYXJhbXMoJHBhcmFtcyktPmV4ZWN1dGUoKTsKICAgIC8vY3JlYXRlIHRoZSByZXNwb25zZQogICAgJHJlc3BvbnNlID0KICAgICAgICBbCiAgICAgICAgICAgICJyZXNwb25zZSIgPT4gJHJlc3VsdCwKCiAgICAgICAgICAgICJzdWNjZXNzIiA9PiB0cnVlLAogICAgICAgICAgICAic3RhdHVzIiA9PiAyMDAKICAgICAgICBdOwoKfSBjYXRjaCAoRXhjZXB0aW9uICRlKXsKICAgIC8vY3JlYXRlIHRoZSByZXNwb25zZSBpZiBlcnJvciB3YXMgdGhyb3duIGluIHRoZSBwcm9jZXMKCiAgICAkZXJyb3IgPSAobWV0aG9kX2V4aXN0cyggJGUsImdldEVycm9yIikpID8gJGUtPmdldEVycm9yKCkgOiAiR2VuZXJpYyBlcnJvciI7CiAgICAkcmVzcG9uc2UgPQogICAgICAgIFsKICAgICAgICAgICAgInJlc3BvbnNlIiA9PgogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICJtZXNzYWdlIiA9PiAgJGUtPmdldE1lc3NhZ2UoKSAsCiAgICAgICAgICAgICAgICAgICAgImVycm9yIiA9PiAgJGVycm9yCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAic3VjY2VzcyIgPT4gZmFsc2UsCiAgICAgICAgICAgICJzdGF0dXMiID0+ICRlLT5nZXRDb2RlKCkKICAgICAgICBdOwp9Cj8+Cgo8P3BocAovL3ByaW50IHRoZSByZXNwb25zZQovL2h0dHBfcmVzcG9uc2VfY29kZSgkc3RhdHVzQ29kZSk7CmhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uJyk7CmVjaG8ganNvbl9lbmNvZGUoJHJlc3BvbnNlLCBKU09OX1BSRVRUWV9QUklOVCApOwo/PgoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";